[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "python-exports"
version = "1.2.0"
description = "@export decorator that adds a function or class to __all__"
authors = ["Joren Hammudoglu <jhammudoglu@gmail.com>"]
license = "MIT"
readme = "README.md"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Operating System :: OS Independent",
    "Typing :: Typed",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
repository = "https://github.com/jorenham/exports"
documentation = "https://github.com/jorenham/exports/blob/master/README.md"
packages = [{include = "exports"}]  # don't remove

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/jorenham/exports/issues"
"Changelog" = "https://github.com/jorenham/exports/releases"

[tool.poetry.dependencies]
# py38 EOL: 2024-10
python = "^3.8"

[tool.poetry.group.dev.dependencies]
basedmypy = "^2.6.0"
basedpyright = "^1.16.0"
codespell = "^2.3.0"
pre-commit = [
    {version = "^3.8.0", python = ">=3.9"},
    {version = "^3.5.0", python = "<3.9"},
]
pytest = "^8.3.2"
ruff = "^0.6.1"
sp-repo-review = {version = "^2024.4.23", extras = ["cli"], python="^3.10"}
tox = "^4.18.0"


[tool.poetry.group.test-github]
optional = true
[tool.poetry.group.test-github.dependencies]
pytest-github-actions-annotate-failures = ">=0.2.0,<1.0"


[tool.codespell]
skip = '*.lock,.venv,.vscode,dist'
context = 2


[tool.mypy]
python_version = "3.10"
always_true = "NP2"
always_false = "NP20"
modules = ["optype", "tests"]
exclude = ["^.venv/.*", "tests/*"]
strict = true

disallow_untyped_defs = true
disallow_incomplete_defs = true
show_error_code_links = true
warn_redundant_casts = true
warn_unused_ignores = true
# based
disallow_any_expr = false  # https://github.com/numpy/numpy/pull/27211
disallow_any_explicit = false
disallow_any_decorated = false

[tool.pyright]
include = ["exports"]
exclude = [".venv", "tests"]
stubPath = "."
venvPath = "."
venv = ".venv"
pythonVersion = "3.8"
pythonPlatform = "All"
typeCheckingMode = "all"

reportUnusedCallResult = false  # https://github.com/microsoft/pyright/issues/8650


[tool.pytest.ini_options]
addopts = ["-ra", "--strict-config", "--strict-markers"]
filterwarnings = ["error"]
log_cli_level = "INFO"
minversion = "8.0"
testpaths = ["exports", "tests"]
xfail_strict = true


[tool.repo-review]
ignore = [
    "PY004",    # no `docs/`
    "PC110",    # no auto-format
    "PC140",    # no mypy
    "PC170",    # no sphinx
    "PC180",    # no css or js
    "MY",       # no mypy
    "RTD",      # no readthedocs
]


[tool.ruff]
src = ["exports"]
target-version = "py38"
indent-width = 4
show-fixes = true
force-exclude = true
extend-exclude = [".github", ".vscode", "tests"]

[tool.ruff.lint]
preview = true
select = ["ALL"]
ignore = ["CPY", "DOC", "EM102", "TRY003", "D104"]

[tool.ruff.lint.isort]
case-sensitive = true
combine-as-imports = true
known-first-party = ["exports"]
lines-after-imports = 2
lines-between-types = 0

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.format]
preview = true
quote-style = "single"
# keep in sync with .editorconfig
indent-style = "space"
line-ending = "lf"


[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = true
requires = tox>=4
envlist =
    repo-review
    pre-commit
    py{38,39,310,311,312,313}

[testenv]
description = pytest
skip_install = true
allowlist_externals = poetry
commands_pre = poetry install --sync
commands = poetry run pytest

[testenv:pre-commit]
description = pre-commit
skip_install = true
allowlist_externals = poetry
commands_pre = poetry install --sync
commands = poetry run pre-commit run --all-files

[testenv:repo-review]
description = repo-review
skip_install = true
allowlist_externals = poetry
commands_pre = poetry install --sync
commands = poetry run repo-review .
"""
